package view

import "github.com/dgf/go-ssr-x/entity"
import "time"
import "strconv"

templ TaskCreateForm() {
	<form
		hx-post="/tasks"
		hx-target="this"
		hx-swap="outerHTML"
		hx-select-oob="#snackbar:afterbegin"
		hx-disabled-elt="button"
		hx-push-url="true"
		class="container rounded-lg bg-stone-200 shadow-lg dark:bg-stone-800"
	>
		<div class="flex flex-col">
			<label for="subject" class="my-2 capitalize">{ Translate(ctx, "task_subject") }</label>
			<input
				name="subject"
				required
				minlength="3"
				maxlength="255"
				class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700"
			/>
			<label for="dueDate" class="my-2 capitalize">{ Translate(ctx, "task_due_date") }</label>
			<input
				name="dueDate"
				type="date"
				value={ date(time.Now().Add(3 * 24 * time.Hour)) }
				min={ date(time.Now()) }
				class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700"
			/>
			<label for="description" class="my-2 capitalize">{ Translate(ctx, "task_description") }</label>
			<textarea name="description" rows="7" class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700"></textarea>
		</div>
		<div class="flex flex-row justify-between py-3">
			<div>
				<button
					hx-push-url="true"
					class="rounded-full bg-sky-500 px-3 py-1 font-semibold capitalize shadow-lg hover:bg-sky-400 disabled:opacity-50 dark:bg-sky-800 dark:hover:bg-sky-700"
				>
					{ Translate(ctx, "task_create") }
				</button>
				<button
					hx-get="/tasks"
					class="rounded-full bg-stone-300 px-3 py-1 font-semibold capitalize shadow-lg hover:bg-stone-200 disabled:opacity-50 dark:bg-stone-700 dark:hover:bg-stone-600"
				>
					{ Translate(ctx, "task_cancel") }
				</button>
			</div>
			<div class="htmx-indicator px-2 py-1 capitalize">{ Translate(ctx, "task_creating") } ...</div>
		</div>
	</form>
}

templ TaskEditForm(task entity.Task) {
	<form
		hx-put={ "/tasks/" + task.Id.String() }
		hx-target="this"
		hx-swap="outerHTML"
		hx-select-oob="#snackbar:afterbegin"
		hx-disabled-elt="button"
		hx-push-url="true"
		class="container rounded-lg bg-stone-200 shadow-lg dark:bg-stone-800"
	>
		<div class="flex flex-col">
			<label for="subject" class="my-2 capitalize">{ Translate(ctx, "task_subject") }</label>
			<input
				name="subject"
				required
				minlength="3"
				maxlength="255"
				value={ task.Subject }
				class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700"
			/>
			<label for="dueDate" class="my-2 capitalize">{ Translate(ctx, "task_due_date") }</label>
			<input
				name="dueDate"
				type="date"
				value={ date(task.DueDate) }
				min={ date(task.CreatedAt) }
				class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700"
			/>
			<label for="description" class="my-2 capitalize">{ Translate(ctx, "task_description") }</label>
			<textarea name="description" rows="7" class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700">
				{ task.Desciption }
			</textarea>
		</div>
		<div class="flex flex-row justify-between py-3">
			<div>
				<button
					class="rounded-full bg-sky-500 px-3 py-1 font-semibold capitalize shadow-lg hover:bg-sky-400 disabled:opacity-50 dark:bg-sky-800 dark:hover:bg-sky-700"
				>
					{ Translate(ctx, "task_save") }
				</button>
				<button
					hx-get={ "/tasks/" + task.Id.String() }
					class="rounded-full bg-stone-300 px-3 py-1 font-semibold capitalize shadow-lg hover:bg-stone-200 disabled:opacity-50 dark:bg-stone-700 dark:hover:bg-stone-600"
				>
					{ Translate(ctx, "task_cancel") }
				</button>
			</div>
			<div class="htmx-indicator px-2 py-1 capitalize">{ Translate(ctx, "task_saving") } ...</div>
		</div>
	</form>
}

templ TaskDetails(task entity.Task) {
	<section
		hx-target="this"
		hx-swap="outerHTML"
		class="container rounded-lg bg-stone-200 py-2 shadow-lg dark:bg-stone-800"
	>
		<div class="grid grid-cols-[1fr_3fr] gap-2">
			<div class="capitalize">{ Translate(ctx, "task_subject") }</div>
			<div>{ task.Subject }</div>
			<div class="capitalize">{ Translate(ctx, "task_created_at") }</div>
			<div>{ LocalizeDateTime(ctx, task.CreatedAt) }</div>
			<div class="capitalize">{ Translate(ctx, "task_due_date") }</div>
			<div>{ LocalizeDate(ctx, task.DueDate) }</div>
			<div class="capitalize">{ Translate(ctx, "task_description") }</div>
			<div class="prose prose-sm dark:prose-invert">
				@markdown(task.Desciption)
			</div>
		</div>
		<div class="flex flex-row justify-between py-3">
			<div hx-disabled-elt="button">
				<button
					hx-get={ "/tasks/" + task.Id.String() + "/edit" }
					hx-push-url="true"
					class="rounded-full bg-sky-500 px-3 py-1 font-semibold capitalize shadow-lg hover:bg-sky-400 disabled:opacity-90 dark:bg-sky-800 dark:hover:bg-sky-700"
				>
					{ Translate(ctx, "task_edit") }
				</button>
				<button
					hx-get="/tasks"
					hx-push-url="true"
					class="rounded-full bg-stone-300 px-3 py-1 font-semibold capitalize shadow-lg hover:bg-stone-200 disabled:opacity-90 dark:bg-stone-700 dark:hover:bg-stone-600"
				>
					{ Translate(ctx, "task_back") }
				</button>
			</div>
		</div>
	</section>
}

templ TaskRow(task entity.TaskOverview) {
	<tr
		id={ task.Id.String() }
		data-created-at={ task.CreatedAt.Format(time.DateTime) }
		class="even:bg-stone-300 dark:even:bg-stone-700"
	>
		<td class="p-2 proportional-nums">
			{ LocalizeDateTime(ctx, task.CreatedAt) }
		</td>
		<td class="p-2 proportional-nums">
			{ LocalizeDate(ctx, task.DueDate) }
		</td>
		<td class="p-2">{ task.Subject }</td>
		<td class="flex gap-1 p-2">
			<button
				hx-get={ "/tasks/" + task.Id.String() }
				hx-push-url="true"
				class="h-8 w-8 rounded-full bg-sky-500 px-2 py-1 shadow-lg hover:bg-sky-400 dark:bg-sky-800 dark:hover:bg-sky-700"
			>
				<img src="/assets/icons/magnify.svg"/>
			</button>
			<button
				hx-delete={ "/tasks/" + task.Id.String() }
				hx-confirm={ Translate(ctx, "task_confirm_delete") }
				hx-target="closest tr"
				hx-swap="outerHTML swap:1s"
				class="h-8 w-8 rounded-full bg-orange-400 px-2 py-1 shadow-lg hover:bg-orange-300 dark:bg-rose-700 dark:hover:bg-rose-600"
			>
				<img src="/assets/icons/trash.svg"/>
			</button>
		</td>
	</tr>
}

templ TaskRows(tasks []entity.TaskOverview) {
	for _, task := range tasks {
		@TaskRow(task)
	}
}

templ TaskTable(tasks []entity.TaskOverview) {
	<div class="py-3">
		<table class="w-full">
			<thead class="bg-stone-400 text-left font-semibold dark:bg-stone-600">
				<tr>
					<th class="p-2 capitalize">{ Translate(ctx, "task_created_at") }</th>
					<th class="p-2 capitalize">{ Translate(ctx, "task_due_date") }</th>
					<th class="p-2 capitalize">{ Translate(ctx, "task_subject") }</th>
					<th class="p-2"></th>
				</tr>
			</thead>
			<tbody id="task-rows">
				@TaskRows(tasks)
			</tbody>
		</table>
	</div>
}

templ TasksSection(tasks []entity.TaskOverview, page entity.TaskPage) {
	<section hx-target="this" hx-swap="outerHTML" class="container rounded-lg bg-stone-200 shadow-lg dark:bg-stone-800">
		<div class="flex flex-row items-center justify-between py-3">
			<form
				id="task-query-form"
				hx-get="/tasks/rows"
				hx-target="#task-rows"
				hx-swap="innerHTML"
				hx-indicator="#tasks-loading"
				hx-push-url="true"
				hx-trigger="input delay:300ms from:[type='search'], input delay:100ms from:[type='number'], change from:[type='number'], change from:select"
				class="flex flex-row items-center gap-4"
			>
				<div class="flex flex-col py-1">
					<label for="task-query-subject" class="capitalize pr-2">{ Translate(ctx, "task_subject") }</label>
					<input
						id="task-query-subject"
						name="subject"
						type="search"
						value={ page.Filter }
						placeholder={ Translate(ctx, "task_subject_filter") + " ..." }
						class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700"
					/>
				</div>
				<div class="flex flex-col py-1">
					<label for="task-query-sort" class="capitalize pr-2">{ Translate(ctx, "task_sort") }</label>
					<select
						id="task-query-sort"
						name="sort"
						class="capitalize rounded-lg px-2 py-2 shadow-lg dark:bg-stone-700"
					>
						@optionList(page.Sort.String(), []Option{
							{value: entity.TaskSortCreatedAt.String(), label: Translate(ctx, "task_created_at")},
							{value: entity.TaskSortDueDate.String(), label: Translate(ctx, "task_due_date")},
							{value: entity.TaskSortSubject.String(), label: Translate(ctx, "task_subject")},
						})
					</select>
				</div>
				<div class="flex flex-col py-1">
					<label for="task-query-order" class="capitalize pr-2">{ Translate(ctx, "task_order") }</label>
					<select
						id="task-query-order"
						name="order"
						class="rounded-lg px-2 py-2 shadow-lg dark:bg-stone-700"
					>
						@optionList(page.Order.String(), []Option{
							{value: entity.AscendingOrder.String(), label: Translate(ctx, "order_ascending")},
							{value: entity.DescendingOrder.String(), label: Translate(ctx, "order_descending")},
						})
					</select>
				</div>
				<div class="flex flex-col py-1">
					<label for="task-query-page" class="capitalize pr-2">{ Translate(ctx, "page_number") }</label>
					<div>
						<button
							type="button"
							_="on click if #task-query-page.value is greater than 1 decrement #task-query-page.value then trigger change on #task-query-page"
							class="rounded-full bg-stone-300 px-3 py-1 shadow-lg hover:bg-stone-200 disabled:opacity-50 dark:bg-stone-700 dark:hover:bg-stone-600"
						>-</button>
						<input
							id="task-query-page"
							name="page"
							type="number"
							step="1"
							min="1"
							value={ strconv.Itoa(page.Page) }
							_="on change if me.value is less than 2 add @disabled to previous <button/> else remove @disabled from previous <button/>"
							class="rounded-sm px-2 py-2 shadow-sm dark:bg-stone-700 w-24"
						/>
						<button
							type="button"
							_="on click increment #task-query-page.value then send change to #task-query-page"
							class="rounded-full bg-stone-300 px-3 py-1 shadow-lg hover:bg-stone-200 disabled:opacity-50 dark:bg-stone-700 dark:hover:bg-stone-600"
						>+</button>
					</div>
				</div>
				<div class="flex flex-col py-1">
					<label for="task-query-size" class="capitalize pr-2">{ Translate(ctx, "page_size") }</label>
					<select
						id="task-query-size"
						name="size"
						class="rounded-lg px-2 py-2 shadow-lg dark:bg-stone-700"
					>
						@optionList(strconv.Itoa(page.Size), []Option{
							{value: "5", label: "5"},
							{value: "10", label: "10"},
							{value: "25", label: "25"},
						})
					</select>
				</div>
				<div id="tasks-loading" class="htmx-indicator capitalize">{ Translate(ctx, "tasks_loading") } ...</div>
			</form>
			<button
				hx-get="/tasks/new"
				hx-push-url="true"
				class="rounded-full bg-sky-500 px-3 py-1 font-semibold capitalize shadow-lg hover:bg-sky-400 disabled:opacity-90 dark:bg-sky-800 dark:hover:bg-sky-700"
			>
				{ Translate(ctx, "task_add") }
			</button>
		</div>
		@TaskTable(tasks)
	</section>
}
